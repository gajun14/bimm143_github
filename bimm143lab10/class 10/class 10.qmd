---
title: "Class 10 - Halloween"
author: "Gaeun Jun (A16814573)"
format: gfm
---

### 1. Importing candy data

```{r}
candy_file <- "https://raw.githubusercontent.com/fivethirtyeight/data/master/candy-power-ranking/candy-data.csv"

candy = read.csv(candy_file, row.names=1)
head(candy)
```

> Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```

There are 85 candy types in this dataset.

> Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy[,"fruity"])
```

There are 38 fruity candy types in the dataset. 

### 2. What is your favorite candy?

```{r}
candy["Twix", ]$winpercent
```

> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
candy["Twix", "winpercent"]
```

My favorite candy in this dataset is Twix and the winpercent value is 81.64!

> Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat", "winpercent"]
```

76.77

> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars", "winpercent"]
```

49.65

##### installing the `skimr` package

```{r}
library("skimr")
skim(candy)
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

While most columns are dbl (numbers with decimals), skim_variable is a chr, n_missing is an int, and hist is a chr. 

> Q7. What do you think a zero and one represent for the candy$chocolate column?

```{r}
candy$chocolate
```

The 0 represents a false statement and a 1 represents a true statement to whether there is chocolate contained in the candy or not. 

> Q8. Plot a histogram of winpercent values

```{r}
library(ggplot2)

ggplot(candy, aes(x=winpercent)) +
  geom_histogram(binwidth=5)
```

> Q9. Is the distribution of winpercent values symmetrical? 

The distribution of winpercent values is not quite symmetrical. It's slightly skewed to the right. 

> Q10. Is the center of the distribution above or below 50%?

```{r}
mean(candy$winpercent)
median(candy$winpercent)
```

The center of distribution is slightly below 50% (as mean is 50.31 and median is 47.83).

> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

```{r}
mean(candy$winpercent[as.logical(candy$chocolate)])
mean(candy$winpercent[as.logical(candy$fruity)])
```

On average, chocolate candy is ranked higher than fruit candy. 

> Q12. Is this difference statistically significant?

Running a t-test to see a statistically significant difference

```{r}
t.test(candy$winpercent[as.logical(candy$chocolate)], candy$winpercent[as.logical(candy$fruity)])
```

Since the p-value is under 0.05, we can conclude that there is a statistically significant difference between chocolate and fruit-ranked candy. 

### 3. Overall Candy Rankings

> Q13. What are the five least liked candy types in this set?

```{r}
head(candy[order(candy$winpercent),], n=5)
```

The five least liked candy types are Nik L Nip, Boston Baked Beans, Chiclets, Super Bubble, and Jawbusters. 

> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
head(candy[order(candy$winpercent, decreasing = TRUE), ], n=5)
```

The top 5 candy types are Reese's Peanut Butter cup, Reese's Miniatures, Twix, Kit Kat, and Snickers. 

##### Creating a barplo to better visualize the overall rankings. 

> Q15. Make a first barplot of candy ranking based on winpercent values.


```{r}
ggplot(candy) + 
  aes(winpercent, rownames(candy)) +
  geom_col()
```

Ordering the barplot to show most popular candy to least popular. 

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy), winpercent)) +
  geom_col()
```

##### Adding Color

```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
```

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy), winpercent)) +
  geom_col(fill=my_cols)
```

> Q17. What is the worst ranked chocolate candy?

The worst ranked chocolate candy is Sixlets. 

> Q18. What is the best ranked fruity candy?

The best ranked fruity candy is Starburst. 

### 4. Taking a look at pricepercent

Making labels that are less overlapping and easier to read. 

```{r}
library(ggrepel)

# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=3.3, max.overlaps = 5)
```

> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

I think Reeses Miniatures is the highest ranked in terms of winptercent for the least money. 

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```

The 5 most expensive candy types in the dataset are Nik L Nip, Nestle Smarties, Ring pop, Hershey's Krackel, and Hershey's Milk Chocolate. The least popular is the Nik L Nip, which has the lowest winpercent. 

> Q21. Make a barplot again with geom_col() this time using pricepercent and then improve this step by step, first ordering the x-axis by value and finally making a so called “dot chat” or “lollipop” chart by swapping geom_col() for geom_point() + geom_segment().

```{r}
ggplot(candy) + 
  aes(pricepercent, reorder(rownames(candy), pricepercent)) +
  geom_col()
```

Making a lollipop chart of pricepercent. 

```{r}
ggplot(candy) +
  aes(pricepercent, reorder(rownames(candy), pricepercent)) +
  geom_segment(aes(yend = reorder(rownames(candy), pricepercent), 
                   xend = 0), col="gray40") +
    geom_point()
```

### 5. Exploring the correlation structure

```{r}
library(corrplot)
```

```{r}
cij <- cor(candy)
corrplot(cij)
```

> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Chocolate and fruity variables are anti-correlated. 

> Q23. Similarly, what two variables are most positively correlated?

Bar and chocolate variables are most positively correlated. 

### 6. Principal Component Analysis

```{r}
pca <- prcomp(candy, scale=TRUE)
summary(pca)
```

Plotting PCA score plot of PC1 vs PC2

```{r}
plot(pca$x[, 1:2])
```

Adding color to the plot

```{r}
plot(pca$x[,1:2], col=my_cols, pch=16)
```

```{r}
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
```

```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)

p
```

Labeling the plot with ggrepel package

```{r}
library(ggrepel)

p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 10)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```

PCA loadings

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Fruity, hard, and pluribus variables are picked up strongly by PC1 in the positive direction. These make sense because these values are positively correlated to each other, while the ones that are picked up strongly by PC1 in the negative direction are less correlated to these variables. 















